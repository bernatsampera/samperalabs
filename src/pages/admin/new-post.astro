---
import Layout from '../../layouts/Layout.astro';

const metadata = {
  title: 'Create New Post',
};
---

<Layout metadata={metadata}>
  <div class="min-h-screen bg-background">
    <!-- Navigation -->
    <nav class="border-b border-border">
      <div class="container mx-auto px-6 py-6 max-w-4xl">
        <a href="/blog" class="text-muted-foreground hover:text-foreground transition-colors"> ‚Üê Back to blog </a>
      </div>
    </nav>

    <!-- Form -->
    <main class="container mx-auto px-6 py-16 max-w-4xl">
      <div class="max-w-2xl">
        <h1 class="text-4xl md:text-6xl font-bold text-foreground mb-12">New Post</h1>

        <form id="new-post-form" class="space-y-8">
          <!-- Title -->
          <div class="space-y-2">
            <label for="title" class="block text-sm font-medium text-foreground"> Title* </label>
            <input
              type="text"
              id="title"
              name="title"
              required
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring"
              placeholder="Enter post title"
            />
          </div>

          <!-- Author -->
          <div class="space-y-2">
            <label for="author" class="block text-sm font-medium text-foreground"> Author* </label>
            <input
              type="text"
              id="author"
              name="author"
              required
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring"
              placeholder="Enter author name"
            />
          </div>

          <!-- Description -->
          <div class="space-y-2">
            <label for="description" class="block text-sm font-medium text-foreground"> Description </label>
            <textarea
              id="description"
              name="description"
              rows="3"
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring resize-none"
              placeholder="Enter post description"></textarea>
          </div>

          <!-- Publication Date -->
          <div class="space-y-2">
            <label for="pub_date" class="block text-sm font-medium text-foreground"> Publication Date </label>
            <input
              type="date"
              id="pub_date"
              name="pub_date"
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground focus:outline-none focus:ring-2 focus:ring-ring"
            />
          </div>

          <!-- Tags -->
          <div class="space-y-2">
            <label for="tags" class="block text-sm font-medium text-foreground"> Tags </label>
            <input
              type="text"
              id="tags"
              name="tags"
              placeholder="design, development, astro"
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring"
            />
            <p class="text-xs text-muted-foreground">Separate tags with commas</p>
          </div>

          <!-- Content -->
          <div class="space-y-2">
            <label for="content" class="block text-sm font-medium text-foreground"> Content* (Markdown) </label>
            <textarea
              id="content"
              name="content"
              rows="20"
              required
              placeholder="Write your post content in Markdown..."
              class="w-full px-4 py-3 bg-input border border-border rounded-sm text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring font-mono text-sm resize-none"
            ></textarea>
          </div>

          <!-- Actions -->
          <div class="flex gap-4 pt-8">
            <button
              type="submit"
              class="inline-flex items-center px-8 py-4 bg-primary-foreground hover:bg-primary/90 transition-colors border border-border rounded-sm font-medium"
            >
              Create Post
            </button>
            <a
              href="/blog"
              class="inline-flex items-center px-8 py-4 bg-secondary text-secondary-foreground hover:bg-secondary/80 transition-colors border border-border rounded-sm font-medium"
            >
              Cancel
            </a>
          </div>
        </form>

        <!-- Status Message -->
        <div id="status-message" class="mt-8"></div>
      </div>
    </main>
  </div>
</Layout>

<script>
  document.getElementById('new-post-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);

    // Convert form data to object
    const postData = {
      title: formData.get('title') as string,
      author: formData.get('author') as string,
      description: (formData.get('description') as string) || undefined,
      pub_date: (formData.get('pub_date') as string) || undefined,
      tags: ((formData.get('tags') as string) || '')
        .split(',')
        .map((tag) => tag.trim())
        .filter((tag) => tag.length > 0),
      content: formData.get('content') as string,
    };

    const statusEl = document.getElementById('status-message');

    try {
      statusEl!.innerHTML = '<div class="text-muted-foreground">Creating post...</div>';

      const response = await fetch('/api/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(postData),
      });

      const result = await response.json();

      if (response.ok) {
        statusEl!.innerHTML = '<div class="text-foreground">Post created successfully!</div>';

        // Redirect to the new post after a short delay
        setTimeout(() => {
          window.location.href = `/posts/${result.slug}`;
        }, 1500);
      } else {
        statusEl!.innerHTML = `<div class="text-destructive">Error: ${result.error}</div>`;
      }
    } catch (error) {
      statusEl!.innerHTML = '<div class="text-destructive">Failed to create post. Please try again.</div>';
      console.error('Error creating post:', error);
    }
  });

  // Set default date to today
  const dateInput = document.getElementById('pub_date') as HTMLInputElement;
  if (dateInput) {
    dateInput.value = new Date().toISOString().split('T')[0];
  }
</script>
