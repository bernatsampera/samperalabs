---
import type {EnhancedPost} from '../../lib/db';

export interface Props {
  post: EnhancedPost;
}

const {post} = Astro.props;

// Content type styling
const getContentTypeBadge = (contentType: string) => {
  switch (contentType) {
    case 'note':
      return {
        text: 'Note',
        classes: 'bg-gray-50 text-gray-500 border border-gray-200',
      };
    case 'tutorial':
      return {
        text: 'Tutorial',
        classes: 'bg-gray-50 text-gray-500 border border-gray-200',
      };
    case 'guide':
      return {
        text: 'Guide',
        classes: 'bg-gray-50 text-gray-500 border border-gray-200',
      };
    default:
      return null;
  }
};

const contentTypeBadge = getContentTypeBadge(post.contentType || 'post');
---

<article
  class="group bg-white hover:bg-gray-50 transition-colors rounded-lg p-6 border border-gray-200 hover:border-gray-300 hover:shadow-sm"
>
  <a href={`/posts/${post.slug}`} class="block space-y-4">
    <!-- Header with date and content type badge -->
    <div class="flex items-center justify-between">
      <time class="text-sm text-gray-500 font-mono">
        {
          new Date(post.pub_date).toLocaleDateString('en-GB', {
            day: '2-digit',
            month: 'short',
            year: 'numeric',
          })
        }
      </time>
      {
        contentTypeBadge && (
          <span class={`px-2 py-1 text-xs font-medium rounded-sm ${contentTypeBadge.classes}`}>
            {contentTypeBadge.text}
          </span>
        )
      }
    </div>

    <!-- Title -->
    <h3 class="text-xl font-semibold text-gray-900 leading-tight group-hover:text-black transition-colors">
      {post.title}
    </h3>

    <!-- Excerpt -->
    {post.excerpt && <p class="text-gray-600 leading-relaxed line-clamp-2">{post.excerpt}</p>}

    <!-- Footer with tags and reading time -->
    <div class="flex items-center justify-between pt-2">
      <div class="flex flex-wrap gap-2">
        {
          post.tags
            .slice(0, 3)
            .map((tag) => (
              <span class="px-2 py-1 bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-sm text-xs font-medium transition-colors">
                {tag}
              </span>
            ))
        }
        {post.tags.length > 3 && <span class="text-xs text-gray-500">+{post.tags.length - 3} more</span>}
      </div>
      <span class="text-sm text-gray-500">
        {post.readingTime} min read
      </span>
    </div>
  </a>
</article>
