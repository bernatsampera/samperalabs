---
import FormField from './form/FormField.astro';
import FormActions from './form/FormActions.astro';
import PostEditor from './form/PostEditor.astro';

export interface Props {
  post?: {
    id?: number;
    title: string;
    author: string;
    description?: string;
    pub_date?: string;
    tags?: string[];
    content: string;
    slug?: string;
  };
  mode: 'create' | 'edit';
}

const {post, mode} = Astro.props;

const defaultPost = {
  title: '',
  author: '',
  description: '',
  pub_date: new Date().toISOString().split('T')[0],
  tags: [],
  content: '',
};

const currentPost = post || defaultPost;
const cancelUrl = mode === 'create' ? '/admin' : `/posts/${post?.slug}`;
---

<form id="post-form" class="space-y-8">
  {post?.id && <input type="hidden" id="post-id" value={post.id} />}

  <FormField label="Title" name="title" value={currentPost.title} required={true} />

  <FormField label="Author" name="author" value={currentPost.author} required={true} />

  <FormField label="Description" name="description" type="textarea" value={currentPost.description || ''} rows={3} />

  <FormField label="Publication Date" name="pub_date" type="date" value={currentPost.pub_date} />

  <FormField
    label="Tags"
    name="tags"
    placeholder="design, development, astro"
    value={currentPost.tags ? currentPost.tags.join(', ') : ''}
    helpText="Separate tags with commas"
  />

  <PostEditor content={currentPost.content} postId={currentPost.title.replace(/\s+/g, '-').toLowerCase()} />

  <FormActions mode={mode} cancelUrl={cancelUrl} />
</form>

<!-- Status Message -->
<div id="status-message" class="mt-8"></div>
